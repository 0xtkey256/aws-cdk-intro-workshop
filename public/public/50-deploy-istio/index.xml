<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy Istio on Canary deployments with Amazon EKS, Spinnaker, Istio and Prometheus</title>
    <link>https://spinnakerworkshop.com/50-deploy-istio.html</link>
    <description>Recent content in Deploy Istio on Canary deployments with Amazon EKS, Spinnaker, Istio and Prometheus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Aug 2018 13:31:55 -0700</lastBuildDate>
    
	<atom:link href="https://spinnakerworkshop.com/50-deploy-istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Install with Helm</title>
      <link>https://spinnakerworkshop.com/50-deploy-istio/install.html</link>
      <pubDate>Tue, 07 Aug 2018 13:31:55 -0700</pubDate>
      
      <guid>https://spinnakerworkshop.com/50-deploy-istio/install.html</guid>
      <description>The first step towards installing Istio, is to download the latest release
$ curl -L https://git.io/getLatestIstio | sh -  This will create a folder in your current directory. At the time of writing, the latest version was 1.0.1, and the command above created a directory istio-1.0.1. We need to add the directory to our path, so we can use the istioctl binary, but also cd into the directory to continue.</description>
    </item>
    
    <item>
      <title>Sample Application</title>
      <link>https://spinnakerworkshop.com/50-deploy-istio/sample-application.html</link>
      <pubDate>Tue, 07 Aug 2018 13:31:55 -0700</pubDate>
      
      <guid>https://spinnakerworkshop.com/50-deploy-istio/sample-application.html</guid>
      <description>Istio contains a handy sample application (BookInfo) that we can use to verify Istio is deployed successfully, and explore some of the key features.
Ensure that your are still in the istio folder downloaded in the previous page, and then run
$ kubectl apply -f &amp;lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)  If you get an error that the istioctl command is not found, please make sure you added the the bin folder to your PATH.</description>
    </item>
    
    <item>
      <title>Istio Dashboard</title>
      <link>https://spinnakerworkshop.com/50-deploy-istio/dashboard.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://spinnakerworkshop.com/50-deploy-istio/dashboard.html</guid>
      <description>Istio automatically collects metrics for our microservices, including throughput, error rates and latencies. To help visualise and these metrics, Istio comes preconfigured with some handy Grafana dashboards.
These dashboards are not exposed to the outside world by default, so we need to port-forward from our local machine to the Grafana pod in order to access them.
$ kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath=&#39;{.items[0].metadata.name}&#39;) 3000:3000 $ open http://localhost:3000/d/1/istio-mesh-dashboard  You should see a browser window pop up, with the Istio mesh dashboard.</description>
    </item>
    
    <item>
      <title>Cleanup Sample Application</title>
      <link>https://spinnakerworkshop.com/50-deploy-istio/cleanup.html</link>
      <pubDate>Tue, 07 Aug 2018 13:31:55 -0700</pubDate>
      
      <guid>https://spinnakerworkshop.com/50-deploy-istio/cleanup.html</guid>
      <description>Now that we have played around with the Istio sample application, we can undeploy the external gateway we created for it by running:
$ kubectl delete -f samples/bookinfo/networking/bookinfo-gateway.yaml gateway.networking.istio.io &amp;quot;bookinfo-gateway&amp;quot; deleted virtualservice.networking.istio.io &amp;quot;bookinfo&amp;quot; deleted  and then delete the sample application itself with:
$ kubectl delete -f &amp;lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml) service &amp;quot;details&amp;quot; deleted deployment.extensions &amp;quot;details-v1&amp;quot; deleted service &amp;quot;ratings&amp;quot; deleted deployment.extensions &amp;quot;ratings-v1&amp;quot; deleted service &amp;quot;reviews&amp;quot; deleted deployment.extensions &amp;quot;reviews-v1&amp;quot; deleted deployment.extensions &amp;quot;reviews-v2&amp;quot; deleted deployment.</description>
    </item>
    
  </channel>
</rss>